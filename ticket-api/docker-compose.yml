name: nest-ticket-api
services:
  # NestJS Application
  app:
    container_name: ticket-api
    build:
      context: .
      dockerfile: ${DOCKERFILE:-Dockerfile}
    ports:
      - '3000:3000'
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ${VOLUME_MOUNT:-./prisma:/app/prisma}
    networks:
      - ticket-network

  # PostgreSQL Database
  postgres:
    container_name: ticket-db-postgres
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - '${DB_PORT:-5432}:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USER} -d ${DB_NAME}']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - ticket-network

  # Redis for Queue Jobs
  redis:
    container_name: ticket-redis
    image: redis:7-alpine
    restart: always
    ports:
      - '${REDIS_PORT:-6379}:6379'
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - ticket-network

volumes:
  postgres_data:
  redis_data:

networks:
  ticket-network:
    driver: bridge
